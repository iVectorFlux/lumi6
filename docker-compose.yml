version: '3.8'

services:
  # Backend API (Using Supabase for database)
  backend:
    build:
      context: ./lumi6backend
      dockerfile: Dockerfile
    container_name: lumi6-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DATABASE_URL: ${DATABASE_URL}
      FRONTEND_URL: ${FRONTEND_URL}
      JWT_SECRET: ${JWT_SECRET}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      WHISPER_MODE: ${WHISPER_MODE}
      OPENAI_GPT_MODEL: ${OPENAI_GPT_MODEL}
      PORT: 4000
    ports:
      - "4000:4000"
    networks:
      - lumi6-network
    volumes:
      - ./lumi6backend/uploads:/app/uploads
      - ./lumi6backend/logs:/app/logs
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./lumi6frontend
      dockerfile: Dockerfile
    container_name: lumi6-frontend
    restart: unless-stopped
    environment:
      VITE_API_URL: ${VITE_API_URL}
    ports:
      - "3000:80"
    networks:
      - lumi6-network
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis (optional - for caching, sessions, etc.)
  redis:
    image: redis:7-alpine
    container_name: lumi6-redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - lumi6-network
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis_data:
    driver: local

networks:
  lumi6-network:
    driver: bridge 