version: '3.8'

services:
  # PostgreSQL Database
  database:
    image: postgres:15-alpine
    container_name: lumi6-database-prod
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-lumi6}
      POSTGRES_USER: ${POSTGRES_USER:-lumi6user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    networks:
      - lumi6-network-prod
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-lumi6user} -d ${POSTGRES_DB:-lumi6}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    # No external port exposure for security

  # Backend API
  backend:
    build:
      context: ./lumi6backend
      dockerfile: Dockerfile
      target: production
    container_name: lumi6-backend-prod
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${POSTGRES_USER:-lumi6user}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB:-lumi6}
      FRONTEND_URL: ${FRONTEND_URL:-https://app.lumi6.com}
      JWT_SECRET: ${JWT_SECRET}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      PORT: 4000
      # Additional production settings
      NODE_OPTIONS: --max-old-space-size=1024
    networks:
      - lumi6-network-prod
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./lumi6backend/uploads:/app/uploads:rw
      - ./lumi6backend/logs:/app/logs:rw
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    # No external port exposure - use nginx

  # Frontend
  frontend:
    build:
      context: ./lumi6frontend
      dockerfile: Dockerfile
      target: production
      args:
        VITE_API_URL: ${VITE_API_URL:-https://api.lumi6.com}
        VITE_APP_ENV: production
    container_name: lumi6-frontend-prod
    restart: unless-stopped
    networks:
      - lumi6-network-prod
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    # No external port exposure - use nginx

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: lumi6-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_cache:/var/cache/nginx
    networks:
      - lumi6-network-prod
    depends_on:
      - frontend
      - backend
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: lumi6-redis-prod
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data_prod:/data
    networks:
      - lumi6-network-prod
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    # No external port exposure

volumes:
  postgres_data_prod:
    driver: local
  redis_data_prod:
    driver: local
  nginx_cache:
    driver: local

networks:
  lumi6-network-prod:
    driver: bridge 